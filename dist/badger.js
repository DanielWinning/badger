(()=>{"use strict";var e={947:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ArgumentHandler=void 0;var o=r(774),a=r(698),n=function(){function e(e){this.commandOptions=[],this.flags=[],this.setupCommandOptions(),this.parseArguments(e)}return e.prototype.setupCommandOptions=function(){this.commandOptions.push(new o.CommandOption("json",!0,!0)),this.commandOptions.push(new o.CommandOption("jest",!1,!1))},e.prototype.parseArguments=function(e){var t=this;e.splice(0,2);for(var r=function(r){if(e[r].startsWith("--")){var n=e[r].slice(2),i=o.commandOptions.find((function(e){return e.getName()===n}));if(!i)throw new Error(a.Messages.ERROR_UNKNOWN_FLAG.replace("%s",n));if(i.requiresValue()){if(r+1<e.length&&!e[r+1].startsWith("--"))return o.addFlag(n,e[r+1],i),"continue";throw new Error(a.Messages.ERROR_MISSING_ARGUMENT_VALUE.replace("%s",n))}o.addFlag(n,null,i),o.commandOptions.forEach((function(e){if(e.isOptionRequired()&&!t.flags.find((function(t){return t.name===e.getName()})))throw new Error(a.Messages.ERROR_MISSING_REQUIRED_FLAG.replace("%s",e.getName()))}))}},o=this,n=0;n<e.length;n++)r(n)},e.prototype.addFlag=function(e,t,r){this.flags.push({name:e,value:t,commandOption:r})},e.prototype.getFlags=function(){return this.flags},e}();t.ArgumentHandler=n},520:function(e,t,r){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BadgeGenerator=void 0;var a=o(r(147)),n=function(){function e(e){this.flags=e;var t=this.flags.find((function(e){return"json"===e.name}));if(void 0===t)throw new Error("You must provide the --json flag with a path to the coverage JSON you wish to parse.");this.configPath=t.value,this.data=this.getJsonDataFromFilepath(this.configPath),this.run()}return e.prototype.run=function(){if(this.flatFlags().includes("jest")){var e=this.getJestCoveragePercentagesForFiles(),t=this.getTotalJestCoverage(e),r=this.getCoverageStatus(t),o=this.generateHTMLBadge(t,r);this.updateReadmeWithBadge(o)}},e.prototype.flatFlags=function(){return this.flags.map((function(e){return e.name}))},e.prototype.getJestCoveragePercentagesForFiles=function(){var e=[];for(var t in this.data){var r=this.data[t];e.push(this.calculateCoverageFromJestData(r.s)),e.push(this.calculateCoverageFromJestData(r.f))}return e},e.prototype.getTotalJestCoverage=function(e){var t=e.length,r=e.reduce((function(e,t){return(Number(e)+Number(t)).toString()}));return(Number(r)/t).toFixed(2)},e.prototype.getCoverageStatus=function(e){var t=parseFloat(e);return t>=90?"green":t>=80?"yellow":"red"},e.prototype.generateHTMLBadge=function(e,t){var r=this.generateBadgeURL(e,t);return'<img src="'.concat(r,'" alt="Coverage ').concat(e,'%">')},e.prototype.generateBadgeURL=function(e,t){return"https://img.shields.io/badge/Coverage-".concat(e,"%25-").concat(t,".svg")},e.prototype.updateReadmeWithBadge=function(e){var t=this,r="./README.md";a.default.readFile(r,"utf8",(function(o,a){if(o)console.error("Error reading file ".concat(o));else{var n=/<!-- Coverage Badge -->\n(<img[^>]*>)/;if(n.test(a)){var i=a.replace(n,"\x3c!-- Coverage Badge --\x3e\n".concat(e));t.updateReadmeFile(r,i)}else i=a.replace(/(<!-- Coverage Badge -->)/,"$1\n".concat(e)),t.updateReadmeFile(r,i)}}))},e.prototype.updateReadmeFile=function(e,t){a.default.writeFile(e,t,"utf8",(function(e){e?console.error("Error writing to README file: ".concat(e)):console.log("Badge added to README")}))},e.prototype.calculateCoverageFromJestData=function(e){var t=Object.keys(e).length;return(Object.values(e).filter((function(e){return e>0})).length/t*100).toFixed(2)},e.prototype.getJsonDataFromFilepath=function(e){try{return JSON.parse(a.default.readFileSync(e,"utf-8"))}catch(e){throw new Error("Error reading the config file.")}},e}();t.BadgeGenerator=n},774:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CommandOption=void 0;var r=function(){function e(e,t,r){void 0===t&&(t=!1),void 0===r&&(r=!1),this.valueRequired=!1,this.isRequired=!1,this.name=e,this.isRequired=t,this.valueRequired=r}return e.prototype.getName=function(){return this.name},e.prototype.isOptionRequired=function(){return this.isRequired},e.prototype.requiresValue=function(){return this.valueRequired},e}();t.CommandOption=r},698:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.Messages=void 0,function(e){e.ERROR_MISSING_REQUIRED_FLAG="Please provide the %s flag",e.ERROR_MISSING_ARGUMENT_VALUE="The %s flag requires a value",e.ERROR_UNKNOWN_FLAG="Unknown flag: --%s"}(r||(t.Messages=r={}))},147:e=>{e.exports=require("fs")}},t={};function r(o){var a=t[o];if(void 0!==a)return a.exports;var n=t[o]={exports:{}};return e[o].call(n.exports,n,n.exports,r),n.exports}var o={};(()=>{var e=o;Object.defineProperty(e,"__esModule",{value:!0});var t=r(947),a=r(520),n=new t.ArgumentHandler(process.argv);new a.BadgeGenerator(n.getFlags())})(),module.exports=o})();